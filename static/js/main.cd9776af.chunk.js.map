{"version":3,"sources":["components/Tabs/Tabs.tsx","components/Navigation/Navigation.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Tabs","memo","tabs","useState","selectedTab","setSelectedTab","isTabSelected","setIsTabSelected","tabId","useParams","legitId","map","tab","id","useEffect","includes","className","to","classNames","selected","onClick","title","content","Navigation","React","HomePage","NotFoundPage","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"oVAgBaA,EAAwBC,gBAAK,YAEnC,IADLC,EACI,EADJA,KAEA,EAAsCC,mBAAqB,MAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACQC,EAAUC,cAAVD,MACFE,EAAUR,EAAKS,KAAI,SAAAC,GAAG,OAAIA,EAAIC,MAQpC,OANAC,qBAAU,WACJN,IAAUE,EAAQK,SAASP,IAC7BD,GAAiB,KAElB,CAACC,IAGF,sBAAKQ,UAAU,YAAf,UACIV,EAKA,oBAAIU,UAAU,qBAAd,0BAJA,oBAAIA,UAAU,qBAAd,iCASF,qBAAKA,UAAU,wBAAf,SACGd,EAAKS,KAAI,SAAAC,GAAG,OACX,qBAEEI,UAAU,MAFZ,SAIE,cAAC,IAAD,CACEC,GAAE,iBAAYL,EAAIC,IAClBG,UAAWE,IACT,cACA,CAAEC,SAAUX,IAAUI,EAAIC,IAAMP,IAElCc,QAAS,WACPb,GAAiB,GACjBF,EAAeO,IARnB,SAWGA,EAAIS,SAdFT,EAAIC,SAoBdT,GACC,qBAAKY,UAAU,qBAAf,SACGZ,EAAYkB,gBC9DVC,G,MAAaC,IAAMvB,MAAK,WACnC,OACE,sBAAKe,UAAU,aAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAU,mBAFZ,kBAOA,cAAC,IAAD,CACEC,GAAG,cACHD,UAAU,mBAFZ,yBCXOS,G,MAAexB,gBAAK,WAC/B,OACE,qBAAKe,UAAU,YAAf,SACE,oBAAIA,UAAU,kBAAd,6BCHOU,G,MAAmBzB,gBAAK,WACnC,OACE,oBAAIe,UAAU,iBAAd,gCCQEd,EAAO,CACX,CAAEW,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAqC3BK,EAlCC,WACd,OACE,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOY,KAAK,IAAIC,QAAS,cAAC,EAAD,MAEzB,eAAC,IAAD,CAAOD,KAAK,SAAZ,UACE,cAAC,IAAD,CACEA,KAAK,SACLC,QACE,cAAC,EAAD,CACE3B,KAAMA,MAKZ,cAAC,IAAD,CACE0B,KAAK,IACLC,QACE,cAAC,EAAD,CACE3B,KAAMA,SAMd,cAAC,IAAD,CAAO0B,KAAK,IAAIC,QAAS,cAAC,EAAD,aC3CjCC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cd9776af.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { memo, useEffect, useState } from 'react';\nimport {\n  NavLink,\n  useParams,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Tab } from '../../types/Tabs';\n\nimport './Tabs.scss';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nexport const Tabs: React.FC<Props> = memo(({\n  tabs,\n}) => {\n  const [selectedTab, setSelectedTab] = useState<Tab | null>(null);\n  const [isTabSelected, setIsTabSelected] = useState(false);\n  const { tabId } = useParams<{ tabId: string }>();\n  const legitId = tabs.map(tab => tab.id);\n\n  useEffect(() => {\n    if (tabId && !legitId.includes(tabId)) {\n      setIsTabSelected(false);\n    }\n  }, [tabId]);\n\n  return (\n    <div className=\"tabs-list\">\n      {!isTabSelected ? (\n        <h1 className=\"tabs-list__message\">\n          Please select a tab\n        </h1>\n      ) : (\n        <h1 className=\"tabs-list__message\">\n          Some message\n        </h1>\n      )}\n\n      <div className=\"tabs-list__navigation\">\n        {tabs.map(tab => (\n          <div\n            key={tab.id}\n            className=\"tab\"\n          >\n            <NavLink\n              to={`/cards/${tab.id}`}\n              className={classNames(\n                'tab__button',\n                { selected: tabId === tab.id && isTabSelected },\n              )}\n              onClick={() => {\n                setIsTabSelected(true);\n                setSelectedTab(tab);\n              }}\n            >\n              {tab.title}\n            </NavLink>\n          </div>\n        ))}\n      </div>\n\n      {selectedTab && (\n        <div className=\"tabs-list__content\">\n          {selectedTab.content}\n        </div>\n      )}\n    </div>\n  );\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Navigation.scss';\n\nexport const Navigation = React.memo(() => {\n  return (\n    <div className=\"navigation\">\n      <NavLink\n        to=\"/\"\n        className=\"navigation__link\"\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        to=\"/cards/info\"\n        className=\"navigation__link\"\n      >\n        Tabs\n      </NavLink>\n    </div>\n  );\n});\n","import { FC, memo } from 'react';\n\nimport './HomePage.scss';\n\nexport const HomePage: FC = memo(() => {\n  return (\n    <div className=\"home-page\">\n      <h1 className=\"home-page-title\">\n        Home page\n      </h1>\n    </div>\n  );\n});\n","import { FC, memo } from 'react';\n\nimport './NotFoundPage.scss';\n\nexport const NotFoundPage: FC = memo(() => {\n  return (\n    <h2 className=\"not-found-page\">\n      Page not found\n    </h2>\n  );\n});\n","/* eslint-disable no-console */\nimport { FC } from 'react';\nimport {\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: FC = () => {\n  return (\n    <div className=\"App\">\n      <Navigation />\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n\n        <Route path=\"/cards\">\n          <Route\n            path=\":tabId\"\n            element={(\n              <Tabs\n                tabs={tabs}\n              />\n            )}\n          />\n\n          <Route\n            path=\"*\"\n            element={(\n              <Tabs\n                tabs={tabs}\n              />\n            )}\n          />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}