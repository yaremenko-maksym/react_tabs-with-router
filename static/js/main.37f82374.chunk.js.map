{"version":3,"sources":["components/Tabs/Tabs.tsx","components/Navigation/Navigation.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Tabs","memo","tabs","tabId","useParams","legitId","map","tab","id","useState","selectedTab","setSelectedTab","isTabSelected","setIsTabSelected","useEffect","includes","length","className","to","classNames","selected","onClick","title","content","Navigation","pathname","useLocation","folder","useMemo","replace","split","trim","active","HomePage","NotFoundPage","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"2UAgBaA,EAAwBC,gBAAK,YAEnC,IADLC,EACI,EADJA,KAEQC,EAAUC,cAAVD,MACFE,EAAUH,EAAKI,KAAI,SAAAC,GAAG,OAAIA,EAAIC,MACpC,EAAsCC,mBAAqB,MAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAcA,OAZAC,qBAAU,WACJX,IAAUE,EAAQU,SAASZ,KAC7BQ,EAAe,MACfE,GAAiB,IAGfV,GAASE,EAAQU,SAASZ,KAC5BQ,EAAeT,GAAMC,EAAMA,EAAMa,OAAS,GAAK,IAC/CH,GAAiB,MAElB,CAACV,IAGF,sBAAKc,UAAU,YAAf,UACE,oBAAIA,UAAU,qBAAd,SACGL,EAAgB,eAAiB,kBAGpC,qBAAKK,UAAU,wBAAf,SACGf,EAAKI,KAAI,SAAAC,GAAG,OACX,qBAEEU,UAAU,MAFZ,SAIE,cAAC,IAAD,CACEC,GAAE,iBAAYX,EAAIC,IAClBS,UAAWE,IACT,cACA,CAAEC,SAAUjB,IAAUI,EAAIC,IAAMI,IAElCS,QAAS,WACPR,GAAiB,GACjBF,EAAeJ,IARnB,SAWGA,EAAIe,SAdFf,EAAIC,SAoBdE,GACC,qBAAKO,UAAU,qBAAf,SACGP,EAAYa,gBC5DVC,G,MAAavB,gBAAK,WAC7B,IAAQwB,EAAaC,cAAbD,SACFE,EAASC,mBAAQ,WACrB,OAAOH,EAASI,QAAQ,IAAK,KAAKC,MAAM,KAAK,GAAGC,SAC/C,CAACN,IAEJ,OACE,sBAAKR,UAAU,aAAf,UACE,cAAC,IAAD,CACEC,GAAG,QACHD,UAAWE,IACT,mBACA,CAAEa,OAAmB,SAAXL,IAJd,kBAUA,cAAC,IAAD,CACET,GAAG,cACHD,UAAWE,IACT,mBACA,CAAEa,OAAmB,UAAXL,IAJd,yBCrBOM,G,MAAehC,gBAAK,WAC/B,OACE,qBAAKgB,UAAU,YAAf,SACE,oBAAIA,UAAU,kBAAd,6BCHOiB,G,MAAmBjC,gBAAK,WACnC,OACE,oBAAIgB,UAAU,iBAAd,gCCQEf,EAAO,CACX,CAAEM,GAAI,QAASc,MAAO,QAASC,QAAS,eACxC,CAAEf,GAAI,QAASc,MAAO,QAASC,QAAS,eACxC,CAAEf,GAAI,QAASc,MAAO,QAASC,QAAS,gBAqC3BY,EAlCC,WACd,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,KAAK,QAAQC,QAAS,cAAC,EAAD,MAE7B,eAAC,IAAD,CAAOD,KAAK,SAAZ,UACE,cAAC,IAAD,CACEA,KAAK,SACLC,QACE,cAAC,EAAD,CACEnC,KAAMA,MAKZ,cAAC,IAAD,CACEkC,KAAK,OACLC,QACE,cAAC,EAAD,CACEnC,KAAMA,SAMd,cAAC,IAAD,CAAOkC,KAAK,IAAIC,QAAS,cAAC,EAAD,aC3CjCC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.37f82374.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { memo, useEffect, useState } from 'react';\nimport {\n  NavLink,\n  useParams,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Tab } from '../../types/Tabs';\n\nimport './Tabs.scss';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nexport const Tabs: React.FC<Props> = memo(({\n  tabs,\n}) => {\n  const { tabId } = useParams<{ tabId: string }>();\n  const legitId = tabs.map(tab => tab.id);\n  const [selectedTab, setSelectedTab] = useState<Tab | null>(null);\n  const [isTabSelected, setIsTabSelected] = useState(false);\n\n  useEffect(() => {\n    if (tabId && !legitId.includes(tabId)) {\n      setSelectedTab(null);\n      setIsTabSelected(false);\n    }\n\n    if (tabId && legitId.includes(tabId)) {\n      setSelectedTab(tabs[+tabId[tabId.length - 1] - 1]);\n      setIsTabSelected(true);\n    }\n  }, [tabId]);\n\n  return (\n    <div className=\"tabs-list\">\n      <h1 className=\"tabs-list__message\">\n        {isTabSelected ? 'Some message' : 'Please select'}\n      </h1>\n\n      <div className=\"tabs-list__navigation\">\n        {tabs.map(tab => (\n          <div\n            key={tab.id}\n            className=\"tab\"\n          >\n            <NavLink\n              to={`/cards/${tab.id}`}\n              className={classNames(\n                'tab__button',\n                { selected: tabId === tab.id && isTabSelected },\n              )}\n              onClick={() => {\n                setIsTabSelected(true);\n                setSelectedTab(tab);\n              }}\n            >\n              {tab.title}\n            </NavLink>\n          </div>\n        ))}\n      </div>\n\n      {selectedTab && (\n        <div className=\"tabs-list__content\">\n          {selectedTab.content}\n        </div>\n      )}\n    </div>\n  );\n});\n","/* eslint-disable no-console */\nimport { memo, useMemo } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './Navigation.scss';\n\nexport const Navigation = memo(() => {\n  const { pathname } = useLocation();\n  const folder = useMemo(() => {\n    return pathname.replace('/', ' ').split('/')[0].trim();\n  }, [pathname]);\n\n  return (\n    <div className=\"navigation\">\n      <NavLink\n        to=\"/home\"\n        className={classNames(\n          'navigation__link',\n          { active: folder === 'home' },\n        )}\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        to=\"/cards/info\"\n        className={classNames(\n          'navigation__link',\n          { active: folder === 'cards' },\n        )}\n      >\n        Tabs\n      </NavLink>\n    </div>\n  );\n});\n","import { FC, memo } from 'react';\n\nimport './HomePage.scss';\n\nexport const HomePage: FC = memo(() => {\n  return (\n    <div className=\"home-page\">\n      <h1 className=\"home-page-title\">\n        Home page\n      </h1>\n    </div>\n  );\n});\n","import { FC, memo } from 'react';\n\nimport './NotFoundPage.scss';\n\nexport const NotFoundPage: FC = memo(() => {\n  return (\n    <h2 className=\"not-found-page\">\n      Page not found\n    </h2>\n  );\n});\n","/* eslint-disable no-console */\nimport { FC } from 'react';\nimport {\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: FC = () => {\n  return (\n    <div className=\"App\">\n      <Navigation />\n\n      <Routes>\n        <Route path=\"/home\" element={<HomePage />} />\n\n        <Route path=\"/cards\">\n          <Route\n            path=\":tabId\"\n            element={(\n              <Tabs\n                tabs={tabs}\n              />\n            )}\n          />\n\n          <Route\n            path=\"info\"\n            element={(\n              <Tabs\n                tabs={tabs}\n              />\n            )}\n          />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}